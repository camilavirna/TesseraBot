# TesseraBot - Cursor Rules & Project Intelligence

## Projeto Overview
Chatbot universitário com IA para Discord, usando RAG com PDFs e Gemini, para usuário iniciante em Python.

## Patterns & Preferences

### User Learning Style
- Usuário nível iniciante em Python
- Quer aprender durante desenvolvimento
- Explicar conceitos conforme implementamos
- Código bem comentado e estruturado
- Exemplos práticos de cada componente

### Technical Constraints (CRÍTICO)
- RAM: 8GB (MAX 6GB para o app)
- Storage: ~100GB livres
- Local development only
- Recursos gratuitos apenas
- 5 usuários iniciais, ~100 PDFs

### Architecture Decisions
- FAISS local > vector databases em nuvem (limitação de recursos)
- SQLite > PostgreSQL (simplicidade + local)
- LangChain como framework principal
- sentence-transformers para embeddings (leve)
- Processamento em lotes pequenos (memória)

### Code Organization Priorities
1. Modularidade extrema (aprendizado)
2. Separação clara de responsabilidades
3. Documentação inline abundante
4. Error handling robusto
5. Memory management explícito

### Development Workflow
- Desenvolvimento incremental
- Testes frequentes com poucos dados
- Monitoramento de RAM constante
- Documentação contínua da Memory Bank

### Communication Style
- Sempre em português
- Explicar O QUE e POR QUE de cada implementação
- Relacionar com conceitos de engenharia de software
- Mostrar trade-offs de decisões técnicas

### Performance Optimization Patterns
- Lazy loading de modelos
- Cache inteligente local
- Chunking otimizado para PDFs
- Garbage collection explícito
- Compressão de embeddings

## Critical Success Factors
1. Não exceder limites de RAM
2. Manter código educativo e claro
3. Implementação robusta com recursos limitados
4. Sistema funcional com PDFs universitários reais